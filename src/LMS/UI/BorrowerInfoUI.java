/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LMS.UI;

import LMS.*;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author itsme
 */
public class BorrowerInfoUI extends javax.swing.JFrame {

    GUIHandler handler;
    Person person;
    /**
     * Creates new form BorrowerInfoUI
     */
    public BorrowerInfoUI(GUIHandler handler, Person person) {
        this.handler = handler;
        this.person = person;
        initComponents();
        this.AL.setName("Error");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        SBRIDTB = new javax.swing.JTextField();
        SBRIDTL = new javax.swing.JLabel();
        SBRIDB = new javax.swing.JButton();
        AL = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        IDTB = new javax.swing.JTextField();
        PTB = new javax.swing.JTextField();
        NTB = new javax.swing.JTextField();
        ATB = new javax.swing.JTextField();
        PNTB = new javax.swing.JTextField();
        SB = new javax.swing.JButton();
        AL2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TA = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1500, 1000));
        setMinimumSize(new java.awt.Dimension(1500, 1000));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel1.setText("BORROWER'S PROFILE");

        SBRIDTB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        SBRIDTB.setName("BorrowerIDTextBox"); // NOI18N

        SBRIDTL.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        SBRIDTL.setText("BORROWER'S ID:");

        SBRIDB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        SBRIDB.setText("GET PROFILE");
        SBRIDB.setName("GetProfileButton"); // NOI18N
        SBRIDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SBRIDBActionPerformed(evt);
            }
        });

        AL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("ID:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("PASSWORD:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("NAME:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("ADDRESS:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("PHONE NO:");

        IDTB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        IDTB.setName(""); // NOI18N
        IDTB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDTBActionPerformed(evt);
            }
        });

        PTB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        PTB.setName("BorrowerPasswordTextBox"); // NOI18N
        PTB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PTBActionPerformed(evt);
            }
        });

        NTB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        NTB.setName("BorrowerNameTextBox"); // NOI18N

        ATB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        ATB.setName("BorrowerAddressTextBox"); // NOI18N

        PNTB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        PNTB.setName("BorrowerPhoneTextBox"); // NOI18N

        SB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        SB.setText("SAVE PROFILE");
        SB.setName("SaveProfileButton"); // NOI18N
        SB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SBActionPerformed(evt);
            }
        });

        AL2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        TA.setEditable(false);
        TA.setColumns(20);
        TA.setRows(5);
        jScrollPane1.setViewportView(TA);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton1.setText("< BACK");
        jButton1.setName("BackButton"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jButton1)
                        .addGap(294, 294, 294)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(358, 358, 358)
                        .addComponent(SBRIDTL)
                        .addGap(32, 32, 32)
                        .addComponent(SBRIDTB, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(SBRIDB))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(722, 722, 722)
                        .addComponent(AL)))
                .addContainerGap(330, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(PNTB, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(26, 26, 26)
                                .addComponent(ATB, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(33, 33, 33)
                                .addComponent(NTB, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(36, 36, 36)
                                .addComponent(PTB, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(30, 30, 30)
                                .addComponent(IDTB, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(467, 467, 467))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1317, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(SB)
                        .addGap(631, 631, 631))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(AL2)
                        .addGap(702, 702, 702))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jButton1)))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SBRIDTB, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SBRIDTL)
                    .addComponent(SBRIDB))
                .addGap(18, 18, 18)
                .addComponent(AL)
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(IDTB, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(PTB, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(NTB, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(ATB, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(PNTB, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SB)
                .addGap(18, 18, 18)
                .addComponent(AL2)
                .addContainerGap(102, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        AL.setText("");
        if(person.getClass().getSimpleName().equals("Clerk") || person.getClass().getSimpleName().equals("Librarian"))
        {
            SBRIDTL.setVisible(true);
            SBRIDTB.setVisible(true);
            SBRIDB.setVisible(true);
            SB.setVisible(true);
            
            IDTB.setEditable(false);
            PTB.setEditable(true);
            NTB.setEditable(true);
            ATB.setEditable(true);
            PNTB.setEditable(true);
            TA.setEditable(false);
        }
        else
        {
            SBRIDTL.setVisible(false);
            SBRIDTB.setVisible(false);
            SBRIDB.setVisible(false);
            SB.setVisible(false);

            IDTB.setEditable(false);
            PTB.setEditable(false);
            NTB.setEditable(false);
            ATB.setEditable(false);
            PNTB.setEditable(false);
            TA.setEditable(false);

            if(person != null){
                IDTB.setText(Integer.toString(person.getID()));
                PTB.setText(person.getPassword());
                NTB.setText(person.getName());
                ATB.setText(person.getAddress());
                PNTB.setText(person.getPhoneNumber());
                String string = "";
                if(((Borrower) person).getBorrowedBooks() != null){
                    string += "\n--------------------------------------------------------------------------------------------------------------\n";
                    string += "\nBook ID\t\tTitle\t\tAuthor\t\tSubject\n";
                    string += "\n--------------------------------------------------------------------------------------------------------------\n";
                    for(int i = 0;i < ((Borrower) person).getBorrowedBooks().size();i++){
                        string += ((Borrower) person).getBorrowedBooks().get(i).getBook().toString();
                    }
                }else{
                    string += "No book currently borrowed";
                }
                TA.setText(string);
            }
            else{
                AL.setText("Invalid person");
            }
        }
    }//GEN-LAST:event_formWindowOpened

    private void SBRIDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SBRIDBActionPerformed
        AL.setText("");
        if(person.getClass().getSimpleName().equals("Clerk") || person.getClass().getSimpleName().equals("Librarian")){
            if(!SBRIDTB.getText().equals("")){
                if(!SBRIDTB.getText().matches(".*[a-zA-Z]+.*")){
                    Borrower br = handler.lib.findBorrower(Integer.parseInt(SBRIDTB.getText()));
                    if(br != null){
                        IDTB.setText(Integer.toString(br.getID()));
                        PTB.setText(br.getPassword());
                        NTB.setText(br.getName());
                        ATB.setText(br.getAddress());
                        PNTB.setText(br.getPhoneNumber());
                        String string = "";
                        if(br.getBorrowedBooks() != null){
                            string += "\n--------------------------------------------------------------------------------------------------------------\n";
                            string += "\nBook ID\t\tTitle\t\tAuthor\t\tSubject\n";
                            string += "\n--------------------------------------------------------------------------------------------------------------\n";
                            for(int i = 0;i < br.getBorrowedBooks().size();i++){
                                string += br.getBorrowedBooks().get(i).getBook().toString();
                            }
                        }else{
                            string += "No book currently borrowed";
                        }
                        TA.setText(string);
                    }
                    else{
                        AL.setText("Invalid borrower id");
                    }
                }
                else{
                    AL.setText("ID can only be numbers");
                }
            }
            else{
                AL.setText("Field(s) cannot be empty");
            }
        }
        else{
            IDTB.setText(Integer.toString(person.getID()));
            PTB.setText(person.getPassword());
            NTB.setText(person.getName());
            ATB.setText(person.getAddress());
            PNTB.setText(person.getPhoneNumber());
        }
    }//GEN-LAST:event_SBRIDBActionPerformed

    private void SBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SBActionPerformed
        AL.setText("");
        AL2.setText("");
        if(person.getClass().getSimpleName().equals("Clerk") || person.getClass().getSimpleName().equals("Librarian")){
            if(!SBRIDTB.getText().equals("") && !PTB.getText().equals("") && !NTB.getText().equals("") && !ATB.getText().equals("") && !PNTB.getText().equals("")){
                if(!SBRIDTB.getText().matches(".*[a-zA-Z]+.*") && !PNTB.getText().matches(".*[a-zA-Z]+.*")){
                    Borrower br = handler.lib.findBorrower(Integer.parseInt(SBRIDTB.getText()));
                    if(br != null){
                        br.setPassword(PTB.getText());
                        br.setName(NTB.getText());
                        br.setAddress(ATB.getText());
                        br.setPhone(PNTB.getText());
                        System.out.println(PTB.getText()+":"+NTB.getText()+":"+ATB.getText()+":"+PNTB.getText());
                        try {
                            handler.lib.fillItBack(handler.con);
                            AL.setText("Profile updated");
                        } catch (SQLException ex) {
                            Logger.getLogger(BorrowerInfoUI.class.getName()).log(Level.SEVERE, null, ex);
                            AL.setText("Could not update due to technical issue");
                        }
                    }
                    else{
                        AL.setText("Invalid borrower id");
                    }
                }
                else{
                    AL.setText("ID and phone number can only be numbers");
                }
            }
            else{
                AL.setText("Field(s) cannot be empty");
            }
        }
        else{
            AL2.setText("You are not allowed to change profile");
        }
    }//GEN-LAST:event_SBActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(person.getClass().getSimpleName().equals("Librarian")){
            this.hide();
            new LibrarianUI(handler, person).setVisible(true);
        }
        else if(person.getClass().getSimpleName().equals("Clerk")){
            this.hide();
            new ClerkUI(handler, person).setVisible(true);
        }
        else{
            this.hide();
            new BorrowerUI(handler, person).setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void IDTBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDTBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDTBActionPerformed

    private void PTBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PTBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PTBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BorrowerInfoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BorrowerInfoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BorrowerInfoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BorrowerInfoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new BorrowerInfoUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AL;
    private javax.swing.JLabel AL2;
    private javax.swing.JTextField ATB;
    private javax.swing.JTextField IDTB;
    private javax.swing.JTextField NTB;
    private javax.swing.JTextField PNTB;
    private javax.swing.JTextField PTB;
    private javax.swing.JButton SB;
    private javax.swing.JButton SBRIDB;
    private javax.swing.JTextField SBRIDTB;
    private javax.swing.JLabel SBRIDTL;
    private javax.swing.JTextArea TA;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
